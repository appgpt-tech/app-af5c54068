//Source code generated by AppGPT (www.appgpt.tech)
import { mergeTranslations } from 'ra-core';
import polyglotI18nProvider from 'ra-i18n-polyglot';
import enOriginal from 'ra-language-english';
import frOriginal from 'ra-language-french';
import grOriginal from 'ra-language-greek';

const enResources = {
  resources: {
    Recipe: {
      name: 'Recipe',
      fields: {
        name: 'Name',
        description: 'Description',
        ingredients: 'Ingredients',
        instructions: 'Instructions',
        preparationTime: 'Preparation Time',
        servings: 'Servings',
        id: 'id',
      },
    },
    Event: {
      name: 'Event',
      fields: {
        name: 'Name',
        eventDate: 'Event Date',
        location: 'Location',
        notes: 'Notes',
        id: 'id',
      },
    },
    Guest: {
      name: 'Guest',
      fields: {
        name: 'Name',
        email: 'Email',
        phoneNumber: 'Phone Number',
        id: 'id',
      },
    },
    Eventrecipe: {
      name: 'Event Recipe',
      fields: {
        modifications: 'Modifications',
        rating: 'Rating',
        notes: 'Notes',
        id: 'id',
      },
    },
  },
};
const frResources = {
  resources: {
    Recipe: {
      name: 'Recipe (fr)',
      fields: {
        name: 'Name (fr)',
        description: 'Description (fr)',
        ingredients: 'Ingredients (fr)',
        instructions: 'Instructions (fr)',
        preparationTime: 'Preparation Time (fr)',
        servings: 'Servings (fr)',
        id: 'id',
      },
    },
    Event: {
      name: 'Event (fr)',
      fields: {
        name: 'Name (fr)',
        eventDate: 'Event Date (fr)',
        location: 'Location (fr)',
        notes: 'Notes (fr)',
        id: 'id',
      },
    },
    Guest: {
      name: 'Guest (fr)',
      fields: {
        name: 'Name (fr)',
        email: 'Email (fr)',
        phoneNumber: 'Phone Number (fr)',
        id: 'id',
      },
    },
    Eventrecipe: {
      name: 'Event Recipe (fr)',
      fields: {
        modifications: 'Modifications (fr)',
        rating: 'Rating (fr)',
        notes: 'Notes (fr)',
        id: 'id',
      },
    },
  },
};
const grResources = {
  resources: {
    Recipe: {
      name: 'Recipe (gr)',
      fields: {
        name: 'Name (gr)',
        description: 'Description (gr)',
        ingredients: 'Ingredients (gr)',
        instructions: 'Instructions (gr)',
        preparationTime: 'Preparation Time (gr)',
        servings: 'Servings (gr)',
        id: 'id',
      },
    },
    Event: {
      name: 'Event (gr)',
      fields: {
        name: 'Name (gr)',
        eventDate: 'Event Date (gr)',
        location: 'Location (gr)',
        notes: 'Notes (gr)',
        id: 'id',
      },
    },
    Guest: {
      name: 'Guest (gr)',
      fields: {
        name: 'Name (gr)',
        email: 'Email (gr)',
        phoneNumber: 'Phone Number (gr)',
        id: 'id',
      },
    },
    Eventrecipe: {
      name: 'Event Recipe (gr)',
      fields: {
        modifications: 'Modifications (gr)',
        rating: 'Rating (gr)',
        notes: 'Notes (gr)',
        id: 'id',
      },
    },
  },
};

const en = mergeTranslations(enOriginal, enResources);
const fr = mergeTranslations(frOriginal, frResources);
const gr = mergeTranslations(grOriginal, grResources);

const translations = { en, fr, gr };
export const i18nProvider = polyglotI18nProvider(
  (locale) => translations[locale],
  'en', //default locale
  [
    { locale: 'en', name: 'English' },
    { locale: 'fr', name: 'Français' },
    { locale: 'gr', name: 'Ελληνικά' },
  ],
);
